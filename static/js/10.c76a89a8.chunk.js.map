{"version":3,"sources":["../node_modules/sdp/sdp.js","../node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"names":["SDPUtils","Math","random","toString","substr","localCName","generateIdentifier","splitLines","blob","trim","split","map","line","splitSections","part","index","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","indexOf","parseCandidate","parts","candidate","foundation","substring","component","parseInt","protocol","toLowerCase","priority","ip","address","port","type","i","length","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","push","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","id","direction","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","Object","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","slice","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","parseSctpDescription","maxMessageSize","parseMLine","maxSizeLine","isNaN","sctpPort","fmt","writeSctpDescription","media","sctp","output","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","version","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","charAt","module","exports","require","dtlsRole","trackId","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","min","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","find","remoteCandidate","addRemoteCandidate","makeError","e","Error","code","NotSupportedError","InvalidStateError","InvalidAccessError","TypeError","OperationError","window","edgeVersion","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","fireAddTrack","pc","receiver","streams","trackEvent","Event","setTimeout","_dispatchEvent","RTCPeerConnection","config","this","_eventTarget","document","createDocumentFragment","method","bind","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","hasTurn","server","urls","url","console","warn","isString","filterIceServers","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","defineProperty","prototype","configurable","get","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","s","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","enabled","removeTrack","sender","t","stop","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","writable","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","serializedCandidate","assign","toJSON","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","encodings","p","receive","Promise","reject","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","start","_updateSignalingState","resolve","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","c","MediaStream","default","RTCRtpReceiver","getCapabilities","isNewTrack","nativeTrack","removeTrackFromStreamAndFireEvent","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","addIceCandidate","candidateString","getStats","selector","MediaStreamTrack","senderOrReceiver","promises","all","then","allStats","results","Map","stats","stat","set","ortcObjectName","nativeGetstats","apply","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","methods","nativeMethod","args","error"],"mappings":"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","file":"static/js/10.c76a89a8.chunk.js","sourcesContent":["/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"],"sourceRoot":""}