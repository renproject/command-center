{"version":3,"sources":["../../src/index.ts","../node_modules/bnc-onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/index.js","../node_modules/bnc-onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-adapter.js","../node_modules/bnc-onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/index.js","../node_modules/bnc-onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/der.js","../node_modules/bnc-onboard/node_modules/tweetnacl/nacl-fast.js","../node_modules/tweetnacl-util/nacl-util.js"],"names":["value","_typeof","Symbol","iterator","obj","constructor","prototype","_require","require","keccak224","keccak384","k256","keccak256","keccak512","secp256k1","assert","rlp","BN","createHash","Buffer","Object","assign","exports","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","SHA3_NULL_S","KECCAK256_NULL","from","SHA3_NULL","KECCAK256_RLP_ARRAY_S","SHA3_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","SHA3_RLP_ARRAY","KECCAK256_RLP_S","SHA3_RLP_S","KECCAK256_RLP","SHA3_RLP","zeros","bytes","allocUnsafe","fill","zeroAddress","bufferToHex","setLengthLeft","setLength","msg","length","right","buf","toBuffer","copy","slice","setLengthRight","unpad","stripZeros","a","first","stripHexPrefix","toString","v","isBuffer","Array","isArray","isHexString","padToEven","intToBuffer","undefined","isBN","toArrayLike","toArray","Error","bufferToInt","toNumber","fromSigned","num","fromTwos","toUnsigned","toTwos","keccak","bits","sha3","sha256","update","digest","ripemd160","padded","hash","rlphash","encode","isValidPrivate","privateKey","privateKeyVerify","isValidPublic","publicKey","sanitize","publicKeyVerify","concat","pubToAddress","publicToAddress","pubKey","publicKeyConvert","privateToPublic","publicKeyCreate","importPublic","ecsign","msgHash","sig","sign","ret","r","signature","s","recovery","hashPersonalMessage","message","prefix","ecrecover","senderPubKey","recover","toRpcSig","fromRpcSig","privateToAddress","isValidAddress","address","test","isZeroAddress","addHexPrefix","toChecksumAddress","toLowerCase","i","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","nonce","isZero","isPrecompiled","str","isHexPrefixed","isValidSignature","homestead","SECP256K1_N_DIV_2","SECP256K1_N","gt","cmp","baToJSON","ba","array","push","defineProperties","self","fields","data","raw","_fields","toJSON","label","forEach","field","this","serialize","getter","setter","allowZero","allowLess","name","defineProperty","enumerable","configurable","get","set","default","alias","decode","d","keys","indexOf","secp256k1v3","der","Uint8Array","module","privateKeyExport","compressed","RangeError","privateKeyImport","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","signatureNormalize","signatureExport","signatureImport","signatureImportLax","sigObj","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","buffer","ecdsaSign","recid","verify","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","ec","EC","ecparams","curve","ucmp","n","point","g","mul","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","result","index","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","nacl","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","l","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","k","c","o","p","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","b","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","key","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","Math","floor","sel25519","q","t","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","e","f","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","cleanup","arr","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","secretKey","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","min","root","util","validateBase64","decodeUTF8","unescape","encodeURIComponent","charCodeAt","encodeUTF8","String","fromCharCode","decodeURIComponent","escape","join","atob","encodeBase64","decodeBase64","call","btoa"],"mappings":"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","file":"static/js/35.a2dbcb95.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverTypedSignature_v4 = exports.recoverTypedSignature = exports.signTypedData_v4 = exports.signTypedData = exports.recoverTypedMessage = exports.signTypedMessage = exports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = exports.recoverTypedSignatureLegacy = exports.signTypedDataLegacy = exports.typedSignatureHash = exports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = exports.normalize = exports.concatSig = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = void 0;\nconst ethUtil = __importStar(require(\"ethereumjs-util\"));\nconst ethAbi = __importStar(require(\"ethereumjs-abi\"));\nconst nacl = __importStar(require(\"tweetnacl\"));\nconst naclUtil = __importStar(require(\"tweetnacl-util\"));\nconst TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\nexports.TYPED_MESSAGE_SCHEMA = TYPED_MESSAGE_SCHEMA;\n/**\n * A collection of utility functions used for signing typed data\n */\nconst TypedDataUtils = {\n    /**\n     * Encodes an object by encoding and concatenating each of its members\n     *\n     * @param {string} primaryType - Root type\n     * @param {Object} data - Object to encode\n     * @param {Object} types - Type definitions\n     * @returns {Buffer} - Encoded representation of an object\n     */\n    encodeData(primaryType, data, types, useV4 = true) {\n        const encodedTypes = ['bytes32'];\n        const encodedValues = [this.hashType(primaryType, types)];\n        if (useV4) {\n            const encodeField = (name, type, value) => {\n                if (types[type] !== undefined) {\n                    return [\n                        'bytes32',\n                        value == null // eslint-disable-line no-eq-null\n                            ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                            : ethUtil.keccak(this.encodeData(type, value, types, useV4)),\n                    ];\n                }\n                if (value === undefined) {\n                    throw new Error(`missing value for field ${name} of type ${type}`);\n                }\n                if (type === 'bytes') {\n                    return ['bytes32', ethUtil.keccak(value)];\n                }\n                if (type === 'string') {\n                    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n                    if (typeof value === 'string') {\n                        value = Buffer.from(value, 'utf8');\n                    }\n                    return ['bytes32', ethUtil.keccak(value)];\n                }\n                if (type.lastIndexOf(']') === type.length - 1) {\n                    const parsedType = type.slice(0, type.lastIndexOf('['));\n                    const typeValuePairs = value.map((item) => encodeField(name, parsedType, item));\n                    return [\n                        'bytes32',\n                        ethUtil.keccak(ethAbi.rawEncode(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n                    ];\n                }\n                return [type, value];\n            };\n            for (const field of types[primaryType]) {\n                const [type, value] = encodeField(field.name, field.type, data[field.name]);\n                encodedTypes.push(type);\n                encodedValues.push(value);\n            }\n        }\n        else {\n            for (const field of types[primaryType]) {\n                let value = data[field.name];\n                if (value !== undefined) {\n                    if (field.type === 'bytes') {\n                        encodedTypes.push('bytes32');\n                        value = ethUtil.keccak(value);\n                        encodedValues.push(value);\n                    }\n                    else if (field.type === 'string') {\n                        encodedTypes.push('bytes32');\n                        // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n                        if (typeof value === 'string') {\n                            value = Buffer.from(value, 'utf8');\n                        }\n                        value = ethUtil.keccak(value);\n                        encodedValues.push(value);\n                    }\n                    else if (types[field.type] !== undefined) {\n                        encodedTypes.push('bytes32');\n                        value = ethUtil.keccak(this.encodeData(field.type, value, types, useV4));\n                        encodedValues.push(value);\n                    }\n                    else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n                        throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n                    }\n                    else {\n                        encodedTypes.push(field.type);\n                        encodedValues.push(value);\n                    }\n                }\n            }\n        }\n        return ethAbi.rawEncode(encodedTypes, encodedValues);\n    },\n    /**\n     * Encodes the type of an object by encoding a comma delimited list of its members\n     *\n     * @param {string} primaryType - Root type to encode\n     * @param {Object} types - Type definitions\n     * @returns {string} - Encoded representation of the type of an object\n     */\n    encodeType(primaryType, types) {\n        let result = '';\n        let deps = this.findTypeDependencies(primaryType, types).filter((dep) => dep !== primaryType);\n        deps = [primaryType].concat(deps.sort());\n        for (const type of deps) {\n            const children = types[type];\n            if (!children) {\n                throw new Error(`No type definition specified: ${type}`);\n            }\n            result += `${type}(${types[type]\n                .map(({ name, type: t }) => `${t} ${name}`)\n                .join(',')})`;\n        }\n        return result;\n    },\n    /**\n     * Finds all types within a type definition object\n     *\n     * @param {string} primaryType - Root type\n     * @param {Object} types - Type definitions\n     * @param {Array} results - current set of accumulated types\n     * @returns {Array} - Set of all types found in the type definition\n     */\n    findTypeDependencies(primaryType, types, results = []) {\n        [primaryType] = primaryType.match(/^\\w*/u);\n        if (results.includes(primaryType) || types[primaryType] === undefined) {\n            return results;\n        }\n        results.push(primaryType);\n        for (const field of types[primaryType]) {\n            for (const dep of this.findTypeDependencies(field.type, types, results)) {\n                !results.includes(dep) && results.push(dep);\n            }\n        }\n        return results;\n    },\n    /**\n     * Hashes an object\n     *\n     * @param {string} primaryType - Root type\n     * @param {Object} data - Object to hash\n     * @param {Object} types - Type definitions\n     * @returns {Buffer} - Hash of an object\n     */\n    hashStruct(primaryType, data, types, useV4 = true) {\n        return ethUtil.keccak(this.encodeData(primaryType, data, types, useV4));\n    },\n    /**\n     * Hashes the type of an object\n     *\n     * @param {string} primaryType - Root type to hash\n     * @param {Object} types - Type definitions\n     * @returns {Buffer} - Hash of an object\n     */\n    hashType(primaryType, types) {\n        return ethUtil.keccak(this.encodeType(primaryType, types));\n    },\n    /**\n     * Removes properties from a message object that are not defined per EIP-712\n     *\n     * @param {Object} data - typed message object\n     * @returns {Object} - typed message object with only allowed fields\n     */\n    sanitizeData(data) {\n        const sanitizedData = {};\n        for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n            if (data[key]) {\n                sanitizedData[key] = data[key];\n            }\n        }\n        if ('types' in sanitizedData) {\n            sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n        }\n        return sanitizedData;\n    },\n    /**\n     * Signs a typed message as per EIP-712 and returns its keccak hash\n     *\n     * @param {Object} typedData - Types message data to sign\n     * @returns {Buffer} - keccak hash of the resulting signed message\n     */\n    sign(typedData, useV4 = true) {\n        const sanitizedData = this.sanitizeData(typedData);\n        const parts = [Buffer.from('1901', 'hex')];\n        parts.push(this.hashStruct('EIP712Domain', sanitizedData.domain, sanitizedData.types, useV4));\n        if (sanitizedData.primaryType !== 'EIP712Domain') {\n            parts.push(this.hashStruct(sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, useV4));\n        }\n        return ethUtil.keccak(Buffer.concat(parts));\n    },\n};\nexports.TypedDataUtils = TypedDataUtils;\nfunction concatSig(v, r, s) {\n    const rSig = ethUtil.fromSigned(r);\n    const sSig = ethUtil.fromSigned(s);\n    const vSig = ethUtil.bufferToInt(v);\n    const rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString('hex'), 64);\n    const vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig));\n    return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString('hex');\n}\nexports.concatSig = concatSig;\nfunction normalize(input) {\n    if (!input) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        const buffer = ethUtil.toBuffer(input);\n        input = ethUtil.bufferToHex(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return ethUtil.addHexPrefix(input.toLowerCase());\n}\nexports.normalize = normalize;\nfunction personalSign(privateKey, msgParams) {\n    const message = ethUtil.toBuffer(msgParams.data);\n    const msgHash = ethUtil.hashPersonalMessage(message);\n    const sig = ethUtil.ecsign(msgHash, privateKey);\n    const serialized = ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n    return serialized;\n}\nexports.personalSign = personalSign;\nfunction recoverPersonalSignature(msgParams) {\n    const publicKey = getPublicKeyFor(msgParams);\n    const sender = ethUtil.publicToAddress(publicKey);\n    const senderHex = ethUtil.bufferToHex(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\nfunction extractPublicKey(msgParams) {\n    const publicKey = getPublicKeyFor(msgParams);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\nfunction externalTypedSignatureHash(typedData) {\n    const hashBuffer = typedSignatureHash(typedData);\n    return ethUtil.bufferToHex(hashBuffer);\n}\nexports.typedSignatureHash = externalTypedSignatureHash;\nfunction signTypedDataLegacy(privateKey, msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data);\n    const sig = ethUtil.ecsign(msgHash, privateKey);\n    return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\nexports.signTypedDataLegacy = signTypedDataLegacy;\nfunction recoverTypedSignatureLegacy(msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data);\n    const publicKey = recoverPublicKey(msgHash, msgParams.sig);\n    const sender = ethUtil.publicToAddress(publicKey);\n    return ethUtil.bufferToHex(sender);\n}\nexports.recoverTypedSignatureLegacy = recoverTypedSignatureLegacy;\nfunction encrypt(receiverPublicKey, msgParams, version) {\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof msgParams.data !== 'string') {\n                throw new Error('Cannot detect secret message, message params should be of the form {data: \"secret message\"} ');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = naclUtil.decodeBase64(receiverPublicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = naclUtil.decodeUTF8(msgParams.data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: naclUtil.encodeBase64(nonce),\n                ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n                ciphertext: naclUtil.encodeBase64(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\nfunction encryptSafely(receiverPublicKey, msgParams, version) {\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    const { data } = msgParams;\n    if (!data) {\n        throw new Error('Cannot encrypt empty msg.data');\n    }\n    if (typeof data === 'object' && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMsgParams = { data: JSON.stringify(dataWithPadding) };\n    return encrypt(receiverPublicKey, paddedMsgParams, version);\n}\nexports.encryptSafely = encryptSafely;\nfunction decrypt(encryptedData, receiverPrivateKey) {\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            // string to buffer to UInt8Array\n            const recieverPrivateKeyUint8Array = nacl_decodeHex(receiverPrivateKey);\n            const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(recieverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n            const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n            const ephemPublicKey = naclUtil.decodeBase64(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, recieverEncryptionPrivateKey);\n            // return decrypted msg data\n            let output;\n            try {\n                output = naclUtil.encodeUTF8(decryptedMessage);\n            }\n            catch (err) {\n                throw new Error('Decryption failed.');\n            }\n            if (output) {\n                return output;\n            }\n            throw new Error('Decryption failed.');\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\nfunction decryptSafely(encryptedData, receiverPrivateKey) {\n    const dataWithPadding = JSON.parse(decrypt(encryptedData, receiverPrivateKey));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = nacl_decodeHex(privateKey);\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return naclUtil.encodeBase64(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n/**\n * A generic entry point for all typed data methods to be passed, includes a version parameter.\n */\nfunction signTypedMessage(privateKey, msgParams, version = 'V4') {\n    switch (version) {\n        case 'V1':\n            return signTypedDataLegacy(privateKey, msgParams);\n        case 'V3':\n            return signTypedData(privateKey, msgParams);\n        case 'V4':\n        default:\n            return signTypedData_v4(privateKey, msgParams);\n    }\n}\nexports.signTypedMessage = signTypedMessage;\nfunction recoverTypedMessage(msgParams, version = 'V4') {\n    switch (version) {\n        case 'V1':\n            return recoverTypedSignatureLegacy(msgParams);\n        case 'V3':\n            return recoverTypedSignature(msgParams);\n        case 'V4':\n        default:\n            return recoverTypedSignature_v4(msgParams);\n    }\n}\nexports.recoverTypedMessage = recoverTypedMessage;\nfunction signTypedData(privateKey, msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data, false);\n    const sig = ethUtil.ecsign(message, privateKey);\n    return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\nexports.signTypedData = signTypedData;\nfunction signTypedData_v4(privateKey, msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data);\n    const sig = ethUtil.ecsign(message, privateKey);\n    return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\nexports.signTypedData_v4 = signTypedData_v4;\nfunction recoverTypedSignature(msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data, false);\n    const publicKey = recoverPublicKey(message, msgParams.sig);\n    const sender = ethUtil.publicToAddress(publicKey);\n    return ethUtil.bufferToHex(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\nfunction recoverTypedSignature_v4(msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data);\n    const publicKey = recoverPublicKey(message, msgParams.sig);\n    const sender = ethUtil.publicToAddress(publicKey);\n    return ethUtil.bufferToHex(sender);\n}\nexports.recoverTypedSignature_v4 = recoverTypedSignature_v4;\n/**\n * @param typedData - Array of data along with types, as per EIP712.\n * @returns Buffer\n */\nfunction typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const data = typedData.map(function (e) {\n        return e.type === 'bytes' ? ethUtil.toBuffer(e.value) : e.value;\n    });\n    const types = typedData.map(function (e) {\n        return e.type;\n    });\n    const schema = typedData.map(function (e) {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return ethAbi.soliditySHA3(['bytes32', 'bytes32'], [\n        ethAbi.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n        ethAbi.soliditySHA3(types, data),\n    ]);\n}\nfunction recoverPublicKey(hash, sig) {\n    const signature = ethUtil.toBuffer(sig);\n    const sigParams = ethUtil.fromRpcSig(signature);\n    return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s);\n}\nfunction getPublicKeyFor(msgParams) {\n    const message = ethUtil.toBuffer(msgParams.data);\n    const msgHash = ethUtil.hashPersonalMessage(message);\n    return recoverPublicKey(msgHash, msgParams.sig);\n}\nfunction padWithZeroes(number, length) {\n    let myString = `${number}`;\n    while (myString.length < length) {\n        myString = `0${myString}`;\n    }\n    return myString;\n}\n// converts hex strings to the Uint8Array format used by nacl\nfunction nacl_decodeHex(msgHex) {\n    const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n    return naclUtil.decodeBase64(msgBase64);\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _require = require('ethereum-cryptography/keccak'),\n    keccak224 = _require.keccak224,\n    keccak384 = _require.keccak384,\n    k256 = _require.keccak256,\n    keccak512 = _require.keccak512;\n\nvar secp256k1 = require('./secp256k1-adapter');\nvar assert = require('assert');\nvar rlp = require('rlp');\nvar BN = require('bn.js');\nvar createHash = require('create-hash');\nvar Buffer = require('safe-buffer').Buffer;\nObject.assign(exports, require('ethjs-util'));\n\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nexports.SHA3_NULL_S = exports.KECCAK256_NULL_S;\n\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\nexports.SHA3_NULL = exports.KECCAK256_NULL;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\nexports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\nexports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;\n\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\nexports.SHA3_RLP_S = exports.KECCAK256_RLP_S;\n\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\nexports.SHA3_RLP = exports.KECCAK256_RLP;\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\nexports.BN = BN;\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\nexports.rlp = rlp;\n\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\nexports.secp256k1 = secp256k1;\n\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n    return msg.slice(-length);\n  }\n};\n\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n};\n\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n    case 256:\n      {\n        return k256(a);\n      }\n    case 384:\n      {\n        return keccak384(a);\n      }\n    case 512:\n      {\n        return keccak512(a);\n      }\n    default:\n      {\n        throw new Error('Invald algorithm: keccak' + bits);\n      }\n  }\n};\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n\n/**\n * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the SHA-3 width\n * @return {Buffer}\n */\nexports.sha3 = exports.keccak;\n\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n  assert(pubKey.length === 64);\n  // Only take the lower 160bits of the hash\n  return exports.keccak(pubKey).slice(-20);\n};\n\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey);\n  // skip the type flag and use the X, Y points\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n  return publicKey;\n};\n\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @return {Object}\n */\nexports.ecsign = function (msgHash, privateKey) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = sig.recovery + 27;\n  return ret;\n};\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {Buffer} publicKey\n */\nexports.ecrecover = function (msgHash, v, r, s) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = v - 27;\n  if (recovery !== 0 && recovery !== 1) {\n    throw new Error('Invalid signature v value');\n  }\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {String} sig\n */\nexports.toRpcSig = function (v, r, s) {\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (v !== 27 && v !== 28) {\n    throw new Error('Invalid recovery id');\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));\n};\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig);\n\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64];\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\nexports.isValidAddress = function (address) {\n  return (/^0x[0-9a-fA-F]{40}$/.test(address)\n  );\n};\n\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  }\n\n  // Only take the lower 160bits of the hash\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @return {Boolean}\n */\n\nexports.isValidSignature = function (v, r, s, homestead) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (v !== 27 && v !== 28) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n    return array;\n  }\n};\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = [];\n\n  // attach the `toJSON`\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n      return obj;\n    }\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n    function getter() {\n      return self.raw[i];\n    }\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  });\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      }\n\n      // make sure all the items are buffers\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","'use strict';\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1-lib/index');\nvar der = require('./secp256k1-lib/der');\n\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nvar privateKeyVerify = function privateKeyVerify(privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nvar privateKeyExport = function privateKeyExport(privateKey, compressed) {\n  // privateKeyExport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\nvar privateKeyImport = function privateKeyImport(privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n  if (privateKey !== null && privateKey.length === 32 && privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyNegate = function privateKeyNegate(privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyModInverse = function privateKeyModInverse(privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakAdd = function privateKeyTweakAdd(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakMul = function privateKeyTweakMul(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCreate = function publicKeyCreate(privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyConvert = function publicKeyConvert(publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar publicKeyVerify = function publicKeyVerify(publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakAdd = function publicKeyTweakAdd(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakMul = function publicKeyTweakMul(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCombine = function publicKeyCombine(publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureNormalize = function signatureNormalize(signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureExport = function signatureExport(signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImport = function signatureImport(signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImportLax = function signatureImportLax(signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nvar sign = function sign(message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = void 0;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      // validate option.data length\n      if (options.data.length !== 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      //  convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return Uint8Array.from(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar verify = function verify(message, signature, publicKey) {\n  // note: secp256k1 v4 verify method has a different argument order\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar recover = function recover(message, signature, recid, compressed) {\n  // note: secp256k1 v4 recover method has a different argument order\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar ecdh = function ecdh(publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and return public key as result\n * @method ecdhUnsafe\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar ecdhUnsafe = function ecdhUnsafe(publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  }\n\n  // ensure valid privateKey length\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n\nmodule.exports = {\n  privateKeyVerify: privateKeyVerify,\n  privateKeyExport: privateKeyExport,\n  privateKeyImport: privateKeyImport,\n  privateKeyNegate: privateKeyNegate,\n  privateKeyModInverse: privateKeyModInverse,\n  privateKeyTweakAdd: privateKeyTweakAdd,\n  privateKeyTweakMul: privateKeyTweakMul,\n\n  publicKeyCreate: publicKeyCreate,\n  publicKeyConvert: publicKeyConvert,\n  publicKeyVerify: publicKeyVerify,\n  publicKeyTweakAdd: publicKeyTweakAdd,\n  publicKeyTweakMul: publicKeyTweakMul,\n  publicKeyCombine: publicKeyCombine,\n\n  signatureNormalize: signatureNormalize,\n  signatureExport: signatureExport,\n  signatureImport: signatureImport,\n  signatureImportLax: signatureImportLax,\n\n  sign: sign,\n  verify: verify,\n  recover: recover,\n\n  ecdh: ecdh,\n  ecdhUnsafe: ecdhUnsafe\n};","'use strict';\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error('couldn\\'t export to DER format');\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ec.keyFromPublic(publicKey);\n\n  var scalar = new BN(privateKey);\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey = void 0;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","\"use strict\";\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length;\n\n  // sequence header\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1;\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null;\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null;\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n  index += 3;\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n\n  var length = signature.length;\n  var index = 0;\n\n  // sequence tag byte\n  if (signature[index++] !== 0x30) {\n    return null;\n  }\n\n  // sequence length byte\n  var lenbyte = signature[index++];\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n    if (index > length) {\n      return null;\n    }\n  }\n\n  // sequence tag byte for r\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for r\n  var rlen = signature[index++];\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n  if (rlen > length - index) {\n    return null;\n  }\n  var rindex = index;\n  index += rlen;\n\n  // sequence tag byte for s\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for s\n  var slen = signature[index++];\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n  if (slen > length - index) {\n    return null;\n  }\n  var sindex = index;\n  index += slen;\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {}\n  // copy r value\n  if (rlen > 32) {\n    return null;\n  }\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length);\n\n  // ignore leading zeros in s\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {}\n  // copy s value\n  if (slen > 32) {\n    return null;\n  }\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n\n  return { r: r, s: s };\n};","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"sourceRoot":""}